/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}


/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~DEFAULTS - MOBILE FIRST ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */

.container{
    background-color: red;
    width: 100vw; /* 100 viewport width - this is more responsive means 100% of your viewport(browser window) width */ 
    height: 100vh; /* viewport height */
}

/* all elements in html has some default styles thats why we see a annoying margin in our page from this point and that is 
why we use css reset */


ul{
    background-color: purple;
    display: flex;
    /* justify-content: flex-end; - this will align the content to the right (or the end of the flex direction) */
    /* justify-content: space-around; - or space-evenly or space-between will aplly a slighyly different layout in 
    spacing the content across the entire flexed item */
}

li{
    /* margin: 10px; margin is space around an object - it pushes other objects away */
    padding: 10px; /*padding is a space inside an object - it pushes content away from the edge */
    border-right: 2px solid black; /*border sits between padding and margin - you always need three
    properties: size, style, and colour */
    background-color: grey; /*when I write display:flex at the down line with anchor tag the size of li(block element) 
    shrink down so I don't see the gray background colour anymore */
    /* list items become flec items because of the ul is set to display:flex */
    flex-grow: 1;
    /* to center the content, just use text-align */
    text-align: center;
    /* flex-basis 0 says to ignore the size of the content and give each items equal weight */
    flex-basis: 0;
    font-size: 24px; 
}

/* target the last item using a pseudo class to remove the border */
li:last-child{
    border: none;
}

a{
    background-color: orange;
    /* remove underline from links with text-decoration */
    text-decoration: none;
}

h2{
    font-size: 32px;
    font-weight: bold;
    padding: 10px;
    margin-bottom: 10px;
    background-color: deepskyblue;
}

section{
    padding: 10px;
    margin: 5px 0;
    background-color: gainsboro;
}

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~ Desktop STYLING ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */

@media screen and (min-width:960px){
    .container{
        width: 80%;
        max-width: 1260px;
        margin: 0 auto; /*margin of 0 on the top and bottom and "automatic margin on the left an right */
    }

    article{
        display: grid;
        grid-template-columns: 2fr 1fr 1fr; /* or repeat(3, 1fr) */
        /* grid-template-areas assigns a map, into which you can assign the position of elements */
        grid-template-areas: 
           "header header side"
           "content content side";
    }

    h2{
        grid-area: header;
    }

    section:last-of-type{
        grid-area: side;
    }

    h2, section:first-of-type{
        grid-column: 1 / span 2; /*start at column 1 and take up 2 columns */
    }

    section:last-of-type{
        grid-column: 3;
        grid-row: 1 / span 2; /*start at row 1 and span 2 rows */
    }
}